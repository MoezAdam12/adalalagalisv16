apiVersion: apps/v1
kind: Deployment
metadata:
  name: adalalegalis-frontend
  labels:
    app: adalalegalis-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: adalalegalis-frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: adalalegalis-frontend
    spec:
      containers:
      - name: frontend
        image: gcr.io/PROJECT_ID/adalalegalis-frontend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 300m
            memory: 512Mi
        env:
        - name: API_URL
          value: "http://adalalegalis-backend-service"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: adalalegalis-frontend-service
spec:
  selector:
    app: adalalegalis-frontend
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: adalalegalis-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - app.adalalegalis.com
    secretName: adalalegalis-tls
  rules:
  - host: app.adalalegalis.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: adalalegalis-backend-service
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: adalalegalis-frontend-service
            port:
              number: 80
