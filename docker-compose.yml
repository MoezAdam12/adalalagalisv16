version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - API_URL=http://localhost:3000
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/adalalegalis
      - JWT_SECRET=development_jwt_secret
      - REFRESH_TOKEN_SECRET=development_refresh_token_secret
    depends_on:
      - postgres

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=adalalegalis
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d

  ml-service:
    build:
      context: ./ml
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./ml:/app
      - ml_models:/app/models
    environment:
      - MODEL_PATH=/app/models
      - LOG_LEVEL=info
      - ENABLE_GPU=false

volumes:
  postgres_data:
  ml_models:
